<%Option Explicit%><!-- #include file="../include/getformattedtimestamp.inc" --><!-- #include file="../include/globalc.inc" --><%Server.ScriptTimeout = 100000'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' Some handy constants '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' File AttributesConst ReadOnly = 1Const Normal = 0'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' Some handy global variables'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Dim TabStopDim NewLineDim iTotalFilesPromotedDim iTotalFilesSkipped''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Sub WriteError(x)	Response.Write("<b><font color=red>ERROR: " & x & "</b></font><br>")End Sub''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Function PromoteFile(strFromFilePath, strToFolderPath)	Dim S	Dim ToFiles	Dim ToFile	Dim FromFile, ToFolder		Set ToFolder = FSO.GetFolder(strToFolderPath)		Set FromFile = FSO.GetFile(strFromFilePath)		Set ToFiles = ToFolder.Files	S = S & "<tr><td>" & FromFile.Name & "</td><td>" & FromFile.DateLastModified & "</td><td>"	If ToFiles.Count <> 0 Then			For Each ToFile In ToFiles			If ToFile.Name = FromFile.Name Then				If ToFile.DateLastModified >= FromFile.DateLastModified Then 					S = S & "Production File " & ToFile.Path & " last modified on " & _						ToFile.DateLastModified & ". Will not promote. " & NewLine					iTotalFilesSkipped = iTotalFilesSkipped + 1 				Else					FromFile.Copy ToFolder.Path & "\" & FromFile.Name, TRUE					If Err.Number <> 0 Then Response.Write S					Set ToFile = FSO.GetFile(ToFolder.Path & "\" & FromFile.Name)					'ToFile.Attributes = ReadOnly					S = S & "<b>Promoting """ & FromFile.Name & """ (" & _							FromFile.DateLastModified & ") to " & ToFolder.Path & "</b>" & NewLine					iTotalFilesPromoted = iTotalFilesPromoted + 1				End If				S = S & "</td></tr>"				PromoteFile = S				Exit Function			End If		Next	End If	'Response.Write("From : " &FromFile.Path & NewLine)	'Response.Write("To   : " & ToFolder.Path & FromFile.Name & NewLine)	'FSO.CopyFile FromFile.Path, ToFolder.Path & FromFile.Name,TRUE	'Response.Write("Copying " & FromFile.Name & " to " & ToFolder.Path & NewLine)		FromFile.Copy ToFolder.Path & "\" & FromFile.Name, TRUE		Set ToFile = FSO.GetFile(ToFolder.Path & "\" & FromFile.Name)	'ToFile.Attributes = ReadOnly	S = S & "Copied " & FromFile.Name & " to " & ToFolder.Path & NewLine	iTotalFilesPromoted = iTotalFilesPromoted + 1	PromoteFile = SEnd Function''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Function PromoteFolder(FromFolder, ToFolder)	Dim S	Dim FromFiles	Dim FromFile	Dim ToFiles	Dim ToFile		Dim FromSubFolders	Dim FromSubFolder	Dim ToSubFolders	Dim ToSubFolder		Dim iLocalFolderCount	S = S & "<table border=1>"	Set FromFiles = FromFolder.Files		If 1 = FromFiles.Count Then		S = S & "There is 1 file in " & FromFolder.Name & "." & NewLine	Else		S = S & "There are " & FromFiles.Count  & " files in " & FromFolder.Name & "." & NewLine	End If		If FromFiles.Count <> 0 Then				For Each FromFile In FromFiles			S = S & PromoteFile(FromFile.Path, ToFolder.Path)		Next	End If	S = S & "</table>"	''''''''''''	Set FromSubFolders = FromFolder.SubFolders	If 1 = FromSubFolders.Count Then		S = S & NewLine & "There is 1 sub folder in " & FromFolder.Path & NewLine & NewLine	Else		S = S & NewLine & "There are " & FromSubFolders.Count & " sub folders in " & FromFolder.Path & NewLine & NewLine	End If	If FromSubFolders.Count <> 0 Then		'iLocalFolderCount = iLocalFolderCount + 1		S = S & "<blockquote>"		For Each FromSubFolder In FromSubFolders			iLocalFolderCount = iLocalFolderCount + 1			'Response.Write("FromSubFolder name = " &FromSubFolder.Name & newline)			If FSO.FolderExists(ToFolder.path & "\" & FromSubFolder.Name) Then				Set ToSubFolder = FSO.GetFolder(ToFolder.path & "\" & FromSubFolder.Name)				'S = S & "Folder " & ToFolder.path & "\" & FromSubFolder.Name & " exists <br>"			Else				'S = S & "Folder " & ToFolder.path & "\" & FromSubFolder.Name & " NOT exists <br>"				FSO.CreateFolder(ToFolder.path & "\" & FromSubFolder.Name)				Set ToSubFolder = FSO.GetFolder(ToFolder.path & "\" & FromSubFolder.Name)			End If			'S = S & "<i>"&FromSubFolder.Name & ":" & InStr(strFoldersExcluded,FromSubFolder.Name)&"</i>"			If CInt(InStr(strFoldersExcluded,FromSubFolder.Name)) <> CInt(0)	Then						S = S 				S = S & "<hr><b> <font style=""BACKGROUND-COLOR: #ffff00"">" & iLocalFolderCount & "</font> Folder " & FromSubFolder.Path & " skipped because it was in excluded folders: """ & strFoldersExcluded &"""</b>"			Else				S = S & "<hr><b> <font style=""BACKGROUND-COLOR: #ffff00"">" & iLocalFolderCount & "</font> Working with folder " & FromSubFolder.Path & "</b>"				S = S & PromoteFolder(FromSubFolder,ToSubFolder)			End IF		Next		S = S & "</blockquote>"		S = S & NewLine	End If	'''''''''''''		PromoteFolder = SEnd Function''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Function PromoteCode(FromFolder, ToFolder)	Dim S	S = S & "Staging Path = " & StagFilePath & "<br>"	S = S & "Production Path = " & ProdFilePath & "<br>"	S = S & "Backup Path = " & BackupFilePath & "<br>"	S = S & "Folders Excluded = " & strFoldersExcluded & "<br>"	S = S & "<hr><b> <font style=""BACKGROUND-COLOR: #ffff00"">" & 1 & "</font> Working with folder " & FromFolder.Path & "</b>"	S = S & PromoteFolder(FromFolder,ToFolder)	S = S & "<hr> <font style=""BACKGROUND-COLOR: #00ff00"">PROMOTION COMPLETE</font><br>"	S = S & "Total Files Promoted: " & iTotalFilesPromoted & "<br>"	S = S & "Total Files Skipped: " & iTotalFilesSkipped & "<br>"	S = S & "Backup of previous production code can be found in " & BackupFilePath & "<br>"	PromoteCode = SEnd Function'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' The main routine'' First, it creates a test directory, along with some subfolders and files.  ' Then, it dumps some information about the available disk drives and ' about the test directory, and then cleans everything up again.'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Sub Main		Dim stagFolder	Dim ProdFolder	strFoldersExcluded = Request.Form("foldersexcluded")	stagFilePath = Request.Form("stagFilePath")	ProdFilePath = Request.Form("ProdFilePath")	BackupFilePath = Request.Form("BackupFilePath")	' Set up global data.	TabStop = Chr(9)	NewLine = "<br>" & Chr(10)	Set FSO = CreateObject("Scripting.FileSystemObject")		If Not FSO.FolderExists(stagFilePath) Then		WriteError "stag folder " & stagFilePath & " does not exist.<br>"		Exit Sub	End If	If Not FSO.FolderExists(ProdFilePath) Then		WriteError "Production folder " & ProdFilePath & " does not exist.<br>"		Exit Sub	End If		Set stagFolder = FSO.GetFolder(stagFilePath)	Set ProdFolder = FSO.GetFolder(ProdFilePath)		'Response.Write(BackupFilePath & "\" & GetFormattedTimeStamp(Now))	If Not FSO.FolderExists(BackupFilePath) Then		FSO.CreateFolder BackupFilePath	End If	ProdFolder.Copy BackupFilePath, TRUE	Response.Write PromoteCode(stagFolder,ProdFolder)End Sub'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Sub BuildForm	%>	<title>Promotion of Code Page</title>	<head>		<SCRIPT LANGUAGE=javascript>	<!--	function BuildPath()	{		document.frmMain.promoteonepath.value = document.frmMain.stagfilepath.value + document.frmMain.promoteonerelpath.value		document.frmMain.promoteprodpath.value = document.frmMain.prodfilepath.value + document.frmMain.promoteonerelpath.value		document.frmMain.backupfile.value = document.frmMain.backupfilepath.value + document.frmMain.promoteonerelpath.value		//alert("Hi");	}	function AlertMe()	{		//alert("What did I tell you? Don't try to change me!");	}	function BuildFocus()	{		document.frmMain.prodfilepath.disabled;//.focus = true;	}	function Disabled()	{		document.frmMain.promoteonerelpath.disabled;			}	function ChangeRadio()	{		// This does not work yet. Radio button must be changed manually.		document.frmMain.action.value = "promoteone";	}	//-->	</SCRIPT>	</head>	<body onLoad="BuildFocus()">	<h1>Code Promotion</h1>	<form name=frmMain method=post action="promote.asp">	<table border=1><tr><td rowspan=2>	Production Path:<br>	<input name=prodfilepath  onChange="BuildPath()" value=<%=ProdFilePath%>>	<br>	<br>	Staging File Path:<br>	<input name=stagfilepath onChange="BuildPath()" value=<%=StagFilePath%>>	<br>	<br>	Backup File Path:<br>	<input name=backupfilepath  onChange="BuildPath()" value=<%=BackupFilePath & "\" & GetFormattedTimeStamp(Now)%> size=40>	<br>	<br>		Folders To Exclude from Promotion:<br>	<input name=foldersexcluded value=<%=strFoldersExcluded%>>	<br>	<br>	</td><td bgcolor=<%=sRowColor%>>	<input type=radio name=action value=promote checked>Promote entire directory<br><br></td></tr>	<tr><td bgcolor=<%=sRowColor%>>	<input type=radio name=action onchange="BuildPath()" onClick="Disabled()" value=promoteone>Promote one file <i>(will overwrite production)</i><br><br>	<i>(relative path) ex: \shc\events.asp</i><br>	<input name=promoteonerelpath value="\" onchange="BuildPath()"><br><br>	<i><b>(do not try to change these. Just admire the coolness of them.)</i></b><br>	<table border=0><tr><td>Copy from:</td><td>	<input name=promoteonepath tabIndex=-1 onChange="BuildPath()" onFocus="AlertMe()" size=50 value=<%=StagFilePath%>>	</td></tr>	<tr><td>	Copy to:</td><td>	<input name=promoteprodpath tabIndex=-1 onChange="BuildPath()" onFocus="AlertMe()" size=50 value=<%=ProdFilePath%>>	</td></tr>	<tr><td>	If I fuck up:</td><td>	<input name=backupfile tabIndex=-1 onChange="BuildPath()" onFocus="AlertMe()" size=50 value=<%=BackupFilePath%>>	</td></tr></table>			</td></tr></table>	<input type=submit name=submit value=promote>		</form>	</body>	<%End Sub'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub PromoteOneFile()	Dim BackupFile	'Dim BackupFolder	Dim ToFile	dim file	Dim FromFile		Set FSO = CreateObject("Scripting.FileSystemObject")	BackupFile = Request("backupfile")	FromFile = Request("promoteonepath")	ToFile = Request("promoteprodpath")	'Response.Write("BackupFile = " & BackupFile & "<br>")	'BackupFolder = Mid(BackupFile, 1, InStrRev(BackupFile,"\") - 1)	'Response.Write("BackupFolder = " & BackupFolder & "<br>")	'If FSO.FileExists(ToFile) Then	'	Response.Write("Copying production (" & ToFile & ") to backup (" & BackupFile & ") <br>")		'If Not FSO.FolderExists(BackupFile) Then		'	FSO.CreateFolder(BackupFolder)g		'End If	'	Set file = FSO.GetFile(FromFile)	'	file.Copy BackupFile, TRUE		'FSO.CopyFile ToFile,BackupFile,TRUE	'Else	'	Response.Write("There is no production file " & ToFile & ". There is no backup.<br>")	'End If		If FSO.FileExists(FromFile) Then		Response.Write("Copying staging (" & FromFile & ") to production (" & ToFile & ")... <br>")		FSO.CopyFile FromFile,ToFile,TRUE		Response.Write("Succeeded.")	Else		Response.Write("There is no staging file " & FromFile & ". Oops.<br>")	End If			End Sub 'PromoteOneFile'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''Dim sActionDim FSOsAction = Request.Form("action")If sAction = "promote" Then	MainElseIf sAction = "promoteone" Then	PromoteOneFile()Else	BuildFormEnd IfSet FSO = Nothing%>